version: "3.7"

services:
    product-api:
        container_name: "product-api-container"
        build: './backend-product'
        depends_on: 
            - product-postgres
        ports: 
            - "3000:3000"
        environment:
            - DB_URI=product-postgres
        restart: always
    
    checkout-api:
        container_name: "checkout-api-container"
        build: './backend-checkout'
        depends_on: 
            - rabbitmq-queue
        ports: 
            - "3010:3000"
        environment:
            - PRODUCT_URI=product-api:3000
            - AUTH_URI=auth-api:3000
            - RABBITMQ_URI=rabbitmq-queue
        restart: always

    auth-api:
        container_name: "auth-api-container"
        build: './backend-auth'
        depends_on: 
            - auth-postgres
        ports: 
            - "3020:3000"
        environment:
            - DB_URI=auth-postgres
        restart: always
    
    product-postgres:
        container_name: product-postgres-container
        image: library/postgres:9.6-alpine
        ports: 
            - "5431:5432"
        volumes: 
            - ./backend-product/docker/postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root@123
            - POSTGRES_DB=database
        restart: always

    auth-postgres:
        container_name: auth-postgres-container
        image: library/postgres:9.6-alpine
        ports: 
            - "5434:5432"
        volumes: 
            - ./backend-auth/docker/postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root@123
            - POSTGRES_DB=database
        restart: always

    nginx:
        container_name: nginx-container
        image: nginx:latest
        ports:
            - "8080:8080"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - product-api
            - checkout-api
            - auth-api
    
    rabbitmq-queue:
        container_name: "rabbitmq-container"
        image: rabbitmq:3-management
        environment:
            RABBITMQ_DEFAULT_USER: "rabbitmq"
            RABBITMQ_DEFAULT_PASS: "rabbitmq"
            RABBITMQ_DEFAULT_VHOST: "/"
        ports:
            - "15672:15672"
            - "5672:5672"
        restart: always